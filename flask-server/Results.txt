With Tesseract:
    - Character Recognition
        Example6.jpg
        Recognizes characters properly and places boxes around them. Places boxes around the UI buttons but is fine.
        
        Example7.jpg
        Recognizes some of the characters and places box around entire image, testing out improvements by putting 
        greater focus on characters.

        Example7_2.jpg
        Recognizes even less, still places box around entire image window instead of just the specific characters.


    - Optimization methods
        Skew correction:
        Not for the best with horizontal images, maybe better for non horizontally oriented images

        Canny edge detection:
        Changes some words entirely

        Dilation:
        Changes and makes some words completel unrecognizable



Dependencies so far:
    - Tesseract, download guide can be found here https://tesseract-ocr.github.io/tessdoc/Installation.html.
        - Japanese and Vertical Japanese scripts need to be downloaded in window when it pops up
    - pip install pytesseract
    - pip install opencv-python
    - pip install --upgrade deepl
    - pip install python-dotenv
    - pip install imutils (tutorial here, https://pyimagesearch.com/2015/02/02/just-open-sourced-personal-imutils-package-series-opencv-convenience-functions/ may need to be abandoned)
    - pip install screeninfo
    - pip install Flask
    - pip install pyautogui (Could be unnecessary, since may or may not use some functions later)


Important Notes:
    - Found that page segmentation 6, psm6, tends to work best but not always

